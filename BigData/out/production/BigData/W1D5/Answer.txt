Q1:
method Map(docid a; doc d)
    H = new AssociativeArray
    for all term w in doc d do
        for all term u in N(w) do
            H(pair(w; u)) = H(pair(w; u)) + 1
    for all term t in H do
        Emit(term t; count H{t})

Q2:
method Map(docid a; doc d)
    H1 = new AssociativeArray
    for all term w in doc d do
        H2 = new AssociativeArray
        for all term u in N(w) do
            H2{u} = H2{u} + 1 .
        H1(pair(w; H2)) = H1(pair(w; H2)) + 1
    for all term t in H1 do
        Emit(term t; count H1{t})

Q3:
a.
Mapper 1
Input:
{cat mat rat cat},{cat bat cat pat},{cat bat rat bat}
Output:
(({cat mat rat cat},{cat bat cat pat}),1)
(({cat mat rat cat},{cat bat rat bat}),1)
(({cat bat cat pat},{cat bat rat bat}),1)

Mapper 2
Input:
{cat rat bat rat},{bat mat pat bat},{pat cat bat mat}
Output:
(({cat rat bat rat},{bat mat pat bat}),1)
(({cat rat bat rat},{cat bat rat bat}),1)
(({bat mat pat bat},{pat cat bat mat}),1)

Reducer 1
Input:

Output:

Reducer 2
Input:
(({bat mat pat bat},{pat cat bat mat}),[1])
(({cat bat cat pat},{cat bat rat bat}),[1])
(({cat mat rat cat},{cat bat cat pat}),[1])
(({cat mat rat cat},{cat bat rat bat}),[1])
(({cat rat bat rat},{bat mat pat bat}),[1])
(({cat rat bat rat},{cat bat rat bat}),[1])
Output:
(({bat mat pat bat},{pat cat bat mat}),1)
(({cat bat cat pat},{cat bat rat bat}),1)
(({cat mat rat cat},{cat bat cat pat}),1)
(({cat mat rat cat},{cat bat rat bat}),1)
(({cat rat bat rat},{bat mat pat bat}),1)
(({cat rat bat rat},{cat bat rat bat}),1)

b.
Mapper 1
Input:
{cat mat rat cat},{cat bat cat pat},{cat bat rat bat}
Output:
(({cat mat rat cat},{cat bat cat pat}),1)
(({cat mat rat cat},{cat bat rat bat}),1)
(({cat bat cat pat},{cat bat rat bat}),1)

Mapper 2
Input:
{cat rat bat rat},{bat mat pat bat},{pat cat bat mat}
Output:
(({cat rat bat rat},{bat mat pat bat}),1)
(({cat rat bat rat},{cat bat rat bat}),1)
(({bat mat pat bat},{pat cat bat mat}),1)

Reducer 1
Input:

Output:

Reducer 2
Input:
(({bat mat pat bat},{pat cat bat mat}),[1])
(({cat bat cat pat},{cat bat rat bat}),[1])
(({cat mat rat cat},{cat bat cat pat}),[1])
(({cat mat rat cat},{cat bat rat bat}),[1])
(({cat rat bat rat},{bat mat pat bat}),[1])
(({cat rat bat rat},{cat bat rat bat}),[1])
Output:
(({bat mat pat bat},{pat cat bat mat}),1)
(({cat bat cat pat},{cat bat rat bat}),1)
(({cat mat rat cat},{cat bat cat pat}),1)
(({cat mat rat cat},{cat bat rat bat}),1)
(({cat rat bat rat},{bat mat pat bat}),1)
(({cat rat bat rat},{cat bat rat bat}),1)

c.
Mapper 1
Input:
{cat mat rat cat},{cat bat cat pat},{cat bat rat bat}
Output:
(({cat mat rat cat},{cat bat cat pat}),1)
(({cat mat rat cat},{cat bat rat bat}),1)
(({cat bat cat pat},{cat bat rat bat}),1)

Mapper 2
Input:
{cat rat bat rat},{bat mat pat bat},{pat cat bat mat}
Output:
(({cat rat bat rat},{bat mat pat bat}),1)
(({cat rat bat rat},{cat bat rat bat}),1)
(({bat mat pat bat},{pat cat bat mat}),1)

Reducer 1
Input:

Output:

Reducer 2
Input:
(({bat mat pat bat},{pat cat bat mat}),[1])
(({cat bat cat pat},{cat bat rat bat}),[1])
(({cat mat rat cat},{cat bat cat pat}),[1])
(({cat mat rat cat},{cat bat rat bat}),[1])
(({cat rat bat rat},{bat mat pat bat}),[1])
(({cat rat bat rat},{cat bat rat bat}),[1])
Output:
(({bat mat pat bat},{pat cat bat mat}),1)
(({cat bat cat pat},{cat bat rat bat}),1)
(({cat mat rat cat},{cat bat cat pat}),1)
(({cat mat rat cat},{cat bat rat bat}),1)
(({cat rat bat rat},{bat mat pat bat}),1)
(({cat rat bat rat},{cat bat rat bat}),1)